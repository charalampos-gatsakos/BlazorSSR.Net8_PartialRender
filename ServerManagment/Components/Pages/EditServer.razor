@page "/servers/{id:int}"
@using ServerManagment.Models

@inject NavigationManager navigationManager

<h3>Edit Server</h3>
<br />
<br />
@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>

        <div class="mb-3 col-3">
            <label class="form-label">Server Name</label>
            <InputText @bind-Value="server.Name" class="form-control"></InputText>
            <ValidationMessage For="() => server.Name"></ValidationMessage>
        </div>

        <div class="mb-3 col-3">
            <label class="form-label">Server City</label>
            <InputSelect @bind-Value="server.City" class="form-control">
                @foreach (var city in cities)
                {
                    <option value="@city">@city</option>
                }
            </InputSelect>
            <ValidationMessage For="() => server.City"></ValidationMessage>
        </div>

        <div class="mb-3 form-check">
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            <label class="form-check-label">Server is online</label>
        </div>

        <button class="btn btn-primary" type="submit">Update</button>

        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}


@code {

    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    private List<string> cities = CitiesRepository.GetCities();

    protected override void OnParametersSet()
    {
        server ??= ServersRepository.GetServerById(this.Id);
    }

    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.ServerId, server);
            navigationManager.NavigateTo("/servers");
        }

    }

}