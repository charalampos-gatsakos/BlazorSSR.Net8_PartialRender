@page "/servers/create";
@using ServerManagment.Models
@inject NavigationManager NavigationManager

<h3>CreateServer</h3>
<br />  

@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>

        <div class="mb-3 col-3">
            <label class="form-label">Server Name</label>
            <InputText @bind-Value="server.Name" class="form-control"></InputText>
            <ValidationMessage For="() => server.Name"></ValidationMessage>
        </div>

        <div class="mb-3 col-3">
            <label class="form-label">Server City</label>
            <br />
            <InputSelect @bind-Value="server.City" class="form-range">
                <option></option>
                @foreach (var city in cities)
                {
                    if (server.City != city)
                    {
                        <option value="@city">@city</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="() => server.City"></ValidationMessage>
        </div>

        <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        <label class="form-check-label">Server is online</label>
        <br />
        <br />

        <button class="btn btn-primary" type="submit">Save</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>

    </EditForm>
}

@code {

    [SupplyParameterFromForm]
    private Server server { get; set; } = new Server() { IsOnline = false };

    private List<string> cities = CitiesRepository.GetCities();

    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.AddServer(server);
            NavigationManager.NavigateTo("/servers");
        }

    }

}
